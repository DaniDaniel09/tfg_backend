security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        # Aquí se define el proveedor desde base de datos (Entity User)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)

    firewalls:
        register:
            pattern: ^/api/register$
            stateless: true
            security: false

        login:
            pattern: ^/api/login$
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~

        # Si estás usando sesiones en otras partes (como backend de admin), puedes mantener este
        main:
            lazy: true
            provider: app_user_provider
            logout:
                path: app_logout

    access_control:
        - { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login,    roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/admin,    roles: ROLE_ADMIN }
        - { path: ^/api/user,     roles: ROLE_USER }
        - { path: ^/api,          roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
